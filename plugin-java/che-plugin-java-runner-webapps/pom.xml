<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2012-2015 Codenvy, S.A.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
      Codenvy, S.A. - initial API and implementation

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>che-plugin-java-parent</artifactId>
        <groupId>org.eclipse.che.plugin</groupId>
        <version>3.10.2-SNAPSHOT</version>
    </parent>
    <artifactId>che-plugin-java-runner-webapps</artifactId>
    <packaging>jar</packaging>
    <name>Che Plugin :: Java :: Runner webApps</name>
    <dependencies>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-api-runner</artifactId>
            <version>${che.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-commons-gwt</artifactId>
            <version>${che.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jvnet.winp</groupId>
            <artifactId>winp</artifactId>
            <version>${org.jvnet.winp.version}</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-clean-tomcat</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.tomcat</groupId>
                                    <artifactId>tomcat</artifactId>
                                    <type>zip</type>
                                    <version>${org.apache.tomcat.version}</version>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                    <destFileName>tomcat.zip</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-tomcat-bundle</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <!-- Unzip Tomcat package -->
                                <mkdir dir="${project.build.directory}/classes/tomcat-bundle" />
                                <unzip dest="${project.build.directory}/classes/tomcat-bundle" src="${project.build.directory}/classes/tomcat.zip">
                                    <patternset>
                                        <exclude name="**/webapps/**" />
                                    </patternset>
                                </unzip>
                                <delete file="${project.build.directory}/classes/tomcat.zip" />
                                <!-- Zip prepared Tomcat binary distribution and remove temporary directory -->
                                <zip basedir="${project.build.directory}/classes/tomcat-bundle" destfile="${project.build.directory}/classes/tomcat.zip" />
                                <delete dir="${project.build.directory}/classes/tomcat-bundle" />
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
